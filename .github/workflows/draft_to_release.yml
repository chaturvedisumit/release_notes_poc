name: Publish release
on:
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - name: Set GHE_HOST
      run: |
       echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python env
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        
    - name: Get Draft Release ID
      id: get_draft_id
      run: |
        draft_info=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases" | jq -r '.[] | select(.draft == true)')
        draft_id=$(echo "$draft_info" | jq -r '.id')
        draft_name=$(echo "$draft_info" | jq -r '.name')

        echo "draft name is :"$draft_name
        
        echo "::set-output name=draft_id::$draft_id"
        echo "::set-output name=draft_name::$draft_name"
    
    - name: Publish Release
      id: publish_release
      if: steps.get_draft_id.outputs.draft_id != null
      run: |
        draft_id=${{ steps.get_draft_id.outputs.draft_id }}
        draft_name=${{ steps.get_draft_id.outputs.draft_name }}
        echo "Publishing release from draft ID: $draft_id"

        echo "curl -X PATCH \
        -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        -H 'Accept: application/vnd.github.v3+json' \
        'https://api.github.com/repos/${{ github.repository }}/releases/$draft_id' \
        -d '{\"draft\": false, \"tag_name\": \"'"$draft_name\"'"}'"

        curl -X PATCH \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        "https://api.github.com/repos/${{ github.repository }}/releases/$draft_id" \
        -d '{"draft": false, "tag_name": "'"$draft_name"'"}'
        
        release_info=$(curl -sH "Accept: application/vnd.github.v3+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        https://api.github.com/repos/${{ github.repository }}/releases | \
        jq -r '.[] | select(.draft == false) | .html_url')
        echo "::set-output name=release_info::$release_info"

    - name: Extract Repository Name
    
      id: extract_repo_name
      if: steps.publish_release.outputs.release_info != ''
      run: echo "::set-output name=repo_name::$(echo ${{ steps.publish_release.outputs.release_info }} | cut -d'/' -f5)"
      
    - name: Post to a Slack channel

      id: slack
      
      if: steps.publish_release.outputs.release_info != ''
      uses: slackapi/slack-github-action@v1.25.0
    
      with:
        channel-id: 'C06HM7BUHA6' 
        
        slack-message: |
          Bi-Weekly Release: The release has been successfully published for :   ${{ steps.publish_release.outputs.repo_name }}
          Release Details: ${{ steps.publish_release.outputs.release_info }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
