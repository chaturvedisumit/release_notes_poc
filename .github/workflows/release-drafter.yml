name: Generate Release Notes

on:
  push:
    branches:
      - release
jobs:
  generate_release_notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: pip install PyGithub

      - name: Fetch draft release
        id: fetch_draft_release
        run: |
          draft_tag=$(curl -sH "Accept: application/vnd.github.v3+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[] | select(.draft) | .tag_name')
          echo "DRAFT_RELEASE_TAG_NUMBER=$draft_tag" >> $GITHUB_ENV

      - name: Check if there is a draft release
        id: check_draft_release
        run: |
          if [[ -n "$DRAFT_RELEASE_TAG_NUMBER" ]]; then
            echo "Draft release exists"
          else
            latest_tag=$(curl -sH "Accept: application/vnd.github.v3+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/tags | jq -r '.[0].name')
            echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          fi

      - name: Set draft release tag output
        if: steps.check_draft_release.outputs.DRAFT_RELEASE_TAG_NUMBER != ''
        id: set_draft_release_tag
        run: echo "::set-output name=DRAFT_RELEASE_TAG_NUMBER::$DRAFT_RELEASE_TAG_NUMBER"

      - name: Set latest tag output
        if: steps.check_draft_release.outputs.DRAFT_RELEASE_TAG_NUMBER == ''
        id: set_latest_tag
        run: echo "::set-output name=LATEST_TAG::$LATEST_TAG"

      - name: Run script
        run: python .github/scripts/generate-release-notes.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          DRAFT_RELEASE_TAG_NUMBER: ${{ steps.set_draft_release_tag.outputs.DRAFT_RELEASE_TAG_NUMBER }}
          LATEST_TAG: ${{ steps.set_latest_tag.outputs.LATEST_TAG }}
